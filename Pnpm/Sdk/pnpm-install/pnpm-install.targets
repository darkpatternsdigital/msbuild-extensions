<Project>
    <PropertyGroup>
        <TargetFramework Condition=" '$(TargetFramework)' == '' and '$(TargetFrameworks)' == '' ">netstandard2.0</TargetFramework>
    </PropertyGroup>

    <PropertyGroup>
        <PublishRelease>false</PublishRelease>
    </PropertyGroup>

    <PropertyGroup>
        <ImportByWildcardAfterMicrosoftCommonTargets>false</ImportByWildcardAfterMicrosoftCommonTargets>
        <GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>

        <PnpmInstallRecordPath Condition=" '$(PnpmInstallRecordPath)' == '' ">$(PnpmRootPath)node_modules\_.install.$(Configuration)._</PnpmInstallRecordPath>
        <PnpmInstallScript Condition=" '$(PnpmInstallScript)' == '' and $(Configuration) != 'Release' ">pnpm install</PnpmInstallScript>
        <PnpmInstallScript Condition=" '$(PnpmInstallScript)' == '' and $(Configuration) == 'Release' ">pnpm install --frozen-lockfile</PnpmInstallScript>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(UseCorepack)' == 'true' ">
        <PnpmInstallScript Condition="$(PnpmInstallScript.StartsWith('pnpm '))">corepack $(PnpmInstallScript)</PnpmInstallScript>
    </PropertyGroup>

    <ItemGroup>
        <RestoreConfig Include="$(PnpmRootPath)package.json" />
        <RestoreConfig Include="$(PnpmRootPath)pnpm-lock.yaml" />
        <RestoreConfig Include="package.json" />
    </ItemGroup>

    <Target Name="PnpmInstall" AfterTargets="Restore;_GenerateProjectRestoreGraph" Inputs="@(RestoreConfig)" Outputs="$(PnpmInstallRecordPath)">
        <!-- Launched via PnpmInstall to run in a critical section -->
        <Exec WorkingDirectory="$(PnpmRootPath)" Command="$(PnpmInstallScript)" />
        <Touch AlwaysCreate="true" ForceTouch="true" Files="$(PnpmInstallRecordPath)" />
    </Target>
</Project>